set -e

die() {
  echo
  echo "*** $@" >&2
  exit 1
}

input_file=$1
output_file=$2

[[ ${input_file}  != '' ]] || input_file='./input.xhtml'
[[ ${output_file} != '' ]] || output_file='./output.xhtml'

if [[ -d "${XSLT_COVERAGE_HOME}" ]] && [[ "${XSPEC_HOME}" != '' ]]; then

    echo "Running WITH code coverage. Remember to set XSLT_COVERAGE_HOME, SAXON_HOME, and XSPEC_HOME"

    [[ -d ./coverage/ ]] || mkdir ./coverage/ || die "Could not create ./coverage/ directory"

    ${XSLT_COVERAGE_HOME}/xslt-coverage.bash to-recipe.xsl ./recipe-config.xml ./coverage/coverage-one.json autogenerated-recipe.xml
    ${XSLT_COVERAGE_HOME}/xslt-coverage.bash to-xslt.xsl ./autogenerated-recipe.xml ./coverage/coverage-two.json autogenerated.xsl
    ${XSLT_COVERAGE_HOME}/xslt-coverage.bash autogenerated.xsl "${input_file}" ./coverage/coverage-three.json "${output_file}"

    node ${XSLT_COVERAGE_HOME}/mergeCoverageFiles.js coverage/coverage-one.json coverage/coverage-two.json coverage/coverage-three.json > coverage/coverage-final.json
    rm coverage/coverage-one.json coverage/coverage-two.json coverage/coverage-three.json

else
    echo "********************************************************************"
    echo "Running without code coverage. To add code coverage, clone "
    echo "https://github.com/philschatz/xslt-coverage and set XSLT_COVERAGE_HOME to be that directory" 
    echo "and follow its instructions. You will end up setting XSLT_COVERAGE_HOME, SAXON_HOME, and XSPEC_HOME"
    echo "********************************************************************"
    echo ""
    echo "Waiting for 10 seconds"
    sleep 2

    if [[ ! $(command -v saxon 2> /dev/null) ]]; then
        die "Could not find saxon XSLT transformer. Install it from https://saxonica.com"
    fi

    echo "Generating Recipe"
    saxon -s:./recipe-config.xml -xsl:./to-recipe.xsl -o:./autogenerated-recipe.xml 

    echo "Generating XSL"
    saxon -s:./autogenerated-recipe.xml -xsl:./to-xslt.xsl -o:./autogenerated.xsl 

    echo "Running Transform"
    saxon -s:${input_file} -xsl:./autogenerated.xsl -o:${output_file} 

fi
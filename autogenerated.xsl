<?xml version="1.0" encoding="UTF-8"?>
<!--This file is autogenerated. DO NOT EDIT.-->
<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:fn="http://www.w3.org/2005/xpath-functions"
               xmlns:h="http://www.w3.org/1999/xhtml"
               xmlns:r="urn:replacer-xml"
               xmlns:temp="urn:temp-placeholder-element"
               expand-text="yes"
               version="3.0"
               exclude-result-prefixes="h r xs fn temp">
   <xsl:output method="xhtml" html-version="5"/>
   <xsl:mode use-accumulators="#all"/>
   <xsl:key name="link-target" match="*" use="@id"/>
   <xsl:key name="internal-id" match="*" use="@temp:id"/>
   <xsl:key name="internal-parent" match="*" use="@temp:parent"/>
   <!--
            ===============================
            Explanation of the modes; they run in order:
            INITIALIZE_MODE: adds a unique @temp:id and @temp:parent to each element to support  r:link to="child"
            ANNOTATE_MODE: adds a unique @temp:replace-id to each element that is matched because the element may move so the selector will no longer apply
                (maybe this can be combined with INITIALIZE_MODE)
            EXPAND_MODE: replaces the current element with the elements defined in r:replace but does not evaluate any of the dump-counter or dump-bucket.
            MOVE_MODE: dumps the elements in the buckets out so they are now in the content
            NUMBER_MODE: dumps the counters out (which result in things being counted) and stores the target link text for an element (e.g. "Figure 4.3")
            LINK_MODE: populates links with autogenerated text based on what the target is
            CLEANUP_MODE: remove temporary attributes on elements
            ===============================
        -->
   <xsl:template match="/">
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="INITIALIZE_MODE" select="@*|node()"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="ANNOTATE_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="EXPAND_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="MOVE_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="NUMBER_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="LINK_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:variable name="pipe">
         <xsl:apply-templates mode="CLEANUP_MODE" select="$pipe"/>
      </xsl:variable>
      <xsl:sequence select="$pipe"/>
   </xsl:template>
   <xsl:accumulator name="solutionBucket" initial-value="()">
      <xsl:accumulator-rule match="//h:body" select="()"/>
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution']"
                            select="$value union ."/>
   </xsl:accumulator>
   <xsl:accumulator name="exerciseBucket" initial-value="()">
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']" select="()"/>
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']"
                            select="$value union ."/>
   </xsl:accumulator>
   <xsl:accumulator name="chapterCounter" initial-value="0">
      <xsl:accumulator-rule match="//h:body" select="0"/>
      <xsl:accumulator-rule match="*[@data-type='chapter']" select="$value + 1"/>
   </xsl:accumulator>
   <xsl:accumulator name="sectionCounter" initial-value="0">
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']" select="0"/>
      <xsl:accumulator-rule match="*[@data-type='page']" select="$value + 1"/>
   </xsl:accumulator>
   <xsl:accumulator name="exerciseCounter" initial-value="0">
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']" select="0"/>
      <xsl:accumulator-rule match="*[@data-type='exercise']" select="$value + 1"/>
   </xsl:accumulator>
   <xsl:accumulator name="figureCounter" initial-value="0">
      <xsl:accumulator-rule match="//h:body//*[@data-type='chapter']" select="0"/>
      <xsl:accumulator-rule match="h:figure" select="$value + 1"/>
   </xsl:accumulator>
   <xsl:template mode="ANNOTATE_MODE" match="//h:body">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e4</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e4' is actually: //h:body-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e4']">

        <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
         <section xmlns="http://www.w3.org/1999/xhtml">
            <h1>Answers</h1>
            <r:dump-bucket temp:id="DUMP_BUCKET_solutionBucket_d1e21" name="solutionBucket"/>
         </section>
         <!-- <r:index/> -->
      </xsl:copy>
      <!--Chapter-->
   </xsl:template>
   <xsl:template mode="MOVE_MODE" match="//h:body">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e4']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="exerciseCounter"/>
      <xsl:param tunnel="yes" name="figureCounter"/>
      <xsl:param tunnel="yes" name="sectionCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="h:body"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE" match="//h:body//*[@data-type='chapter']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e29</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e29' is actually: //h:body//*[@data-type='chapter']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e29']">

            <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <h2 xmlns="http://www.w3.org/1999/xhtml">Chapter <r:dump-counter name="chapterCounter"/>
         </h2>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
         <div xmlns="http://www.w3.org/1999/xhtml">
            <h2>Homework</h2>
            <r:dump-bucket temp:id="DUMP_BUCKET_exerciseBucket_d1e54"
                           name="exerciseBucket"
                           group-by="*[@data-type='page']"
                           group-by-title="./*[@data-type='document-title']"/>
         </div>
      </xsl:copy>
      <!--Exercise-->
      <!--Figure-->
      <!--Note-->
      <!--Section-->
   </xsl:template>
   <xsl:template mode="MOVE_MODE" match="//h:body//*[@data-type='chapter']">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e29']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="exerciseCounter"/>
      <xsl:param tunnel="yes" name="figureCounter"/>
      <xsl:param tunnel="yes" name="sectionCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='chapter']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e60</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e60' is actually: //h:body//*[@data-type='chapter']//*[@data-type='exercise']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e60']">
                
                <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <r:link-text>
            <r:dump-counter name="chapterCounter"/>.<r:dump-counter name="exerciseCounter"/>
         </r:link-text>
         <r:link xmlns="http://www.w3.org/1999/xhtml"
                 to="child"
                 temp:child-link-key="*[@data-type=#solution#]">
            <r:dump-counter name="exerciseCounter"/>
         </r:link>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
      <!--Solution-->
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']">
      <xsl:comment>Moved "//h:body//*[@data-type='chapter']//*[@data-type='exercise']" because it had a @move-to</xsl:comment>
      <xsl:message>Removing element //h:body//*[@data-type='chapter']//*[@data-type='exercise'] because it has a @move-to</xsl:message>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e60']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="exerciseCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='exercise']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e82</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e82' is actually: //h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e82']">
                    <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <r:link xmlns="http://www.w3.org/1999/xhtml" to="parent"/>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution']">
      <xsl:comment>Moved "//h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution']" because it had a @move-to</xsl:comment>
      <xsl:message>Removing element //h:body//*[@data-type='chapter']//*[@data-type='exercise']//*[@data-type='solution'] because it has a @move-to</xsl:message>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e82']">
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='solution']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//h:figure">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e96</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e96' is actually: //h:body//*[@data-type='chapter']//h:figure-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e96']">

                <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
      <!--Caption-->
   </xsl:template>
   <xsl:template mode="MOVE_MODE" match="//h:body//*[@data-type='chapter']//h:figure">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e96']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="figureCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="h:figure"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//h:figure//h:figcaption">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e105</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e105' is actually: //h:body//*[@data-type='chapter']//h:figure//h:figcaption-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e105']">
                    <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <strong xmlns="http://www.w3.org/1999/xhtml">
            <r:dump-counter name="chapterCounter"/>.<r:dump-counter name="figureCounter"/>
         </strong>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//h:figure//h:figcaption">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e105']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="figureCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="h:figcaption"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='note']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e123</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e123' is actually: //h:body//*[@data-type='chapter']//*[@data-type='note']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e123']">

                <!--r:this-->
      <xsl:copy>
         <xsl:attribute name="class">os-note</xsl:attribute>
         <xsl:apply-templates select="@*"/>
         <!--r:children selector="*[@data-type='title']"-->
         <xsl:apply-templates mode="EXPAND_MODE" select="*[@data-type='title']"/>
         <h:div xmlns="http://www.w3.org/1999/xhtml" class="os-note-body">
                        <!--r:children selector="*[not(@data-type='title')]"-->
            <xsl:apply-templates mode="EXPAND_MODE" select="*[not(@data-type='title')]"/>
         </h:div>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='note']">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e123']">
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='note']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='note']//*[@data-type='title']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e135</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e135' is actually: //h:body//*[@data-type='chapter']//*[@data-type='note']//*[@data-type='title']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e135']">
      <h:h6 xmlns="http://www.w3.org/1999/xhtml"
            data-type="title"
            class="os-note-title">
                        <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </h:h6>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='note']//*[@data-type='title']">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e135']">
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='title']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='page']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e146</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e146' is actually: //h:body//*[@data-type='chapter']//*[@data-type='page']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e146']">
                
                <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <r:link-text>
                        <!--TODO: Maybe copy-content should somehow squirrel away the original content instead of the expanded content-->
                        <!-- <r:dump-counter name="chapterCounter"/>.<r:dump-counter name="sectionCounter"/>:  -->
            <r:copy-content temp:id="COPY_CONTENT__d1e156"
                            selector="./*[@data-type='document-title']/node()"/>
         </r:link-text>
         <!--r:children selector=""-->
         <xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
      <!-- Add the section number to the title -->
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='page']">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e146']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="sectionCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='page']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='page']//*[@data-type='document-title']">
      <xsl:copy>
         <xsl:attribute name="temp:replace-id">d1e167</xsl:attribute>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--@temp:replace-id='d1e167' is actually: //h:body//*[@data-type='chapter']//*[@data-type='page']//*[@data-type='document-title']-->
   <xsl:template mode="EXPAND_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e167']">
                    <!--r:this-->
      <xsl:copy>
         <xsl:apply-templates select="@*"/>
         <r:dump-counter name="chapterCounter"/>.<r:dump-counter name="sectionCounter"/>: <!--r:children selector=""--><xsl:apply-templates mode="EXPAND_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="//h:body//*[@data-type='chapter']//*[@data-type='page']//*[@data-type='document-title']">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()">
            <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
         </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="*[@temp:replace-id][@temp:replace-id = 'd1e167']">
      <xsl:param tunnel="yes" name="chapterCounter"/>
      <xsl:param tunnel="yes" name="sectionCounter"/>
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*"/>
         <xsl:attribute name="temp:linktext">
            <xsl:apply-templates mode="NUMBER_MODE" select="r:link-text/node()">
               <xsl:with-param tunnel="yes" name="nearestReplacerContext" select="."/>
            </xsl:apply-templates>
         </xsl:attribute>
         <!--r:children selector="*[@data-type='document-title']"-->
         <xsl:apply-templates mode="NUMBER_MODE" select="node()"/>
      </xsl:copy>
   </xsl:template>
   <!--Preserve the tree hierarchy before things start to move around-->
   <xsl:template mode="INITIALIZE_MODE" match="*">
      <xsl:copy>
         <xsl:attribute name="temp:id" select="generate-id()"/>
         <xsl:attribute name="temp:parent" select="generate-id(..)"/>
         <xsl:apply-templates mode="INITIALIZE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <!--Identity Transform-->
   <xsl:template match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="INITIALIZE_MODE" match="@*|node()[not(self::*)]">
      <xsl:copy>
         <xsl:apply-templates mode="INITIALIZE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="ANNOTATE_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="ANNOTATE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="EXPAND_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="EXPAND_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="MOVE_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="MOVE_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="NUMBER_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="LINK_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="LINK_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="CLEANUP_MODE" match="@*|node()">
      <xsl:copy>
         <xsl:apply-templates mode="CLEANUP_MODE" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="CLEANUP_MODE"
                 match="@temp:replace-id | @temp:id | @temp:parent | @temp:linktext"/>
   <xsl:template mode="NUMBER_MODE" match="r:dump-counter">
      <xsl:value-of select="accumulator-after(@name)"/>
   </xsl:template>
   <xsl:template mode="LINK_MODE" match="h:a[starts-with(@href, '#')]">
      <xsl:variable name="targetId" select="substring-after(@href, '#')"/>
      <xsl:variable name="target" select="key('link-target', $targetId)"/>
      <xsl:if test="not($target)">
         <xsl:message terminate="yes">BUG: Could not find link target with id="{$targetId}"</xsl:message>
      </xsl:if>
      <xsl:copy>
         <xsl:apply-templates mode="LINK_MODE" select="@*"/>
         <xsl:value-of select="$target[1]/@temp:linktext"/>
      </xsl:copy>
   </xsl:template>
   <xsl:template mode="LINK_MODE" match="r:link[@to='parent']">
      <xsl:variable name="parentId" select="ancestor::*[@temp:parent][1]/@temp:parent"/>
      <xsl:if test="not($parentId)">
         <xsl:message terminate="yes">BUG: Could not find an ancestor of this link that has a @temp:parent assigned</xsl:message>
      </xsl:if>
      <xsl:variable name="parent" select="key('internal-id', $parentId)"/>
      <xsl:if test="not($parent)">
         <xsl:message terminate="yes">BUG: Could not find parent element with temp:id="{$parentId}"</xsl:message>
      </xsl:if>
      <xsl:if test="not($parent[1]/@id)">
         <xsl:message terminate="yes">This parent element does not have an id attribute on it yet. Autogenerating id attributes is not supported yet. </xsl:message>
      </xsl:if>
      <h:a href="#{$parent[1]/@id}">
         <xsl:if test="not($parent/@temp:linktext)">
            <xsl:message terminate="yes">Link target #{$parent[1]/@id} did not have a link-text element defined for it so do not know how to render the link</xsl:message>
         </xsl:if>
         <xsl:value-of select="$parent[1]/@temp:linktext"/>
      </h:a>
   </xsl:template>
   <xsl:template mode="LINK_MODE"
                 match="r:link[@to='child'][@temp:child-link-key='*[@data-type=#solution#]']">
      <xsl:variable name="child"
                    select="key('internal-parent', ancestor::*[@temp:id][1]/@temp:id)[self::*[@data-type='solution']]"/>
      <xsl:if test="not($child[1]/@id)">
         <xsl:message>{count($child)} elements</xsl:message>
         <xsl:message terminate="no">This child element does not have an id attribute on it yet. Autogenerating id attributes is not supported yet. *[@data-type='solution']</xsl:message>
      </xsl:if>
      <h:a href="#{$child[1]/@id}">
         <xsl:if test="not($child/@temp:linktext)">
            <xsl:message terminate="no">Link target #{$child[1]/@id} did not have a link-text element defined for it so do not know how to render the link</xsl:message>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="node()">
               <xsl:apply-templates mode="LINK_MODE" select="node()"/>
            </xsl:when>
            <xsl:otherwise>
               <xsl:value-of select="$child[1]/@temp:linktext"/>
            </xsl:otherwise>
         </xsl:choose>
      </h:a>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE" match="r:link-text"/>
   <xsl:template mode="NUMBER_MODE" match="r:link-text//comment()"/>
   <xsl:template mode="MOVE_MODE"
                 match="r:dump-bucket[@temp:id='DUMP_BUCKET_solutionBucket_d1e21']">
      <xsl:comment> r:dump-bucket[@name='solutionBucket'][not(@group-by)] DUMP_BUCKET_solutionBucket_d1e21</xsl:comment>
      <xsl:for-each select="accumulator-after('solutionBucket')">
         <xsl:copy>
            <xsl:apply-templates mode="MOVE_MODE" select="@*|node()"/>
         </xsl:copy>
      </xsl:for-each>
   </xsl:template>
   <xsl:template mode="MOVE_MODE"
                 match="r:dump-bucket[@temp:id='DUMP_BUCKET_exerciseBucket_d1e54']">
      <xsl:param tunnel="yes" name="nearestReplacerContext" as="element()"/>
      <xsl:comment> DUMP_BUCKET_exerciseBucket_d1e54 . Found {count($nearestReplacerContext/*[@data-type='page'])} groups to loop over</xsl:comment>
      <xsl:for-each select="$nearestReplacerContext/*[@data-type='page']">
         <xsl:variable name="groupEl" select="."/>
         <xsl:variable name="title" select="./*[@data-type='document-title']"/>
         <h:div class="-i-am-a-group-by-block">
            <h:h3>
               <h:a href="#{$groupEl/@id}">[this-will-be-replaced-with-autogen-linktext]</h:a>
            </h:h3>
            <xsl:for-each select="accumulator-after('exerciseBucket')">
               <xsl:variable name="nearestGroupEl" select="ancestor::*[@data-type='page']"/>
               <xsl:if test="$groupEl[1] = $nearestGroupEl[1]">
                  <xsl:copy>
                     <xsl:apply-templates mode="MOVE_MODE" select="@*|node()"/>
                  </xsl:copy>
               </xsl:if>
            </xsl:for-each>
         </h:div>
      </xsl:for-each>
   </xsl:template>
   <xsl:template mode="NUMBER_MODE"
                 match="r:copy-content[@temp:id='COPY_CONTENT__d1e156']">
      <xsl:param tunnel="yes" name="nearestReplacerContext" as="element()"/>
      <xsl:apply-templates mode="NUMBER_MODE"
                           select="$nearestReplacerContext/./*[@data-type='document-title']/node()"/>
   </xsl:template>
</xsl:transform>
